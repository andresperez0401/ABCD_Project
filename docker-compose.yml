# version: "3.8"
# services:
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     env_file:
#       - ./backend/.env        # define FLASK_APP, DATABASE_URL, JWT_SECRET...
#     volumes:
#       - ./backend/sqlite:/app/sqlite   # si usas SQLite local
#     ports:
#       - "8080:8080"
#     depends_on:
#       - db   # si agregas un servicio de Postgres más abajo

#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "80:80"

#   # Opcional: si usas Postgres en contenedor
#   db:
#     image: postgres:15-alpine
#     restart: always
#     env_file:
#       - ./backend/.env    # aquí define DATABASE_URL apuntando a postgres://postgres:pwd@db:5432/...
#     volumes:
#       - pgdata:/var/lib/postgresql/data

# volumes:
#   pgdata:

# version: '3.8'
services:

  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: abcd_user
      POSTGRES_PASSWORD: abcd_2025
      POSTGRES_DB: abcdatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
    depends_on:
      - db
    command: >
      sh -c "
        flask db init 2>/dev/null || true &&
        flask db migrate -m 'auto' 2>/dev/null || true &&
        flask db upgrade &&
        flask run --host=0.0.0.0 --port=5000
      "

#Hay que revisar que no hace los insert automaticamente
#  python seed.py &&

  frontend:
    build:
      context: ./frontend
    restart: always
    ports:
      - "3000:3000"
    # Montamos tu código para hot-reload, pero preservamos node_modules dentro del contenedor:
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - ./frontend/.env 
    # Usamos dev en lugar de start para arrancar Vite en modo desarrollo
    command: ["npm", "run", "dev"]
    # environment:
    #   - VITE_BACKEND_URL=http://backend:5000

volumes:
  postgres_data:  # Volumen nombrado para persistencia








# version: '3.8'
# services:
#   backend:
#     build:
#       context: ./backend
#     ports:
#       - "5000:5000"
#     volumes:
#       - ./backend:/app
#     environment:
#       - FLASK_ENV=development # si estás usando Flask

#   frontend:
#     build:
#       context: ./frontend
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./frontend:/app


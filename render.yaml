# services:
#   - type: web
#     name: abcd-project
#     env: docker
#     plan: free
#     branch: main
#     healthCheckPath: /healthz
#     envVars:
#       - key: DATABASE_URL
#         fromDatabase:
#           name: abcd-db
#           property: connectionString
#       - key: JWT_SECRET
#         generateValue: true
#     autoDeploy: true

# databases:
#   - name: abcd-db
#     plan: free

# ============================================================
# Render deploy config for ABCD Project (Flask + React + Neon)
# ============================================================

services:
  - type: web
    name: abcd-project
    env: docker
    plan: free
    branch: main
    autoDeploy: true
    healthCheckPath: /healthz

    # Variables de entorno
    envVars:
      - key: DATABASE_URL
        value: postgresql://neondb_owner:npg_xsBDCO19fVhS@ep-blue-math-a4s3507k-pooler.us-east-1.aws.neon.tech/neondb?sslmode=require
      
      - key: FLASK_APP
        value: app.py

      - key: FLASK_ENV
        value: production

      - key: JWT_SECRET
        generateValue: true

      # Si usas Cloudinary desde el backend
      - key: CLOUDINARY_CLOUD_NAME
        value: dn3qxqsm5
      - key: CLOUDINARY_UPLOAD_PRESET
        value: canchago-preset

    # Si tu repo tiene frontend y backend juntos
    # Render construirá el frontend y luego lanzará Flask
    buildCommand: |
      cd frontend
      npm install
      npm run build
      cd ..
      pip install -r requirements.txt

    # Render iniciará el servidor Flask con Gunicorn
    startCommand: gunicorn app:app --bind 0.0.0.0:10000

